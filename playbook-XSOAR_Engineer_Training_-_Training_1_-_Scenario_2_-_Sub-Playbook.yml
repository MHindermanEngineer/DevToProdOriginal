contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
description: "This sub-playbook works with the parent, and will loop over the passed
  in data, and IF there is a Base64 key, it will decode it, and return a new key called
  LoopData with contained the original Base64 and the decoded base 64. \n\nMake sure
  to check the Playbook Inputs/Outputs to see what to pass in, and what this playbook
  will output to the parent. "
id: aa4ed364-613c-4897-85cd-6d924b5e0a80
inputs:
- description: 'The array of data to pass in. '
  key: data
  playbookInputQuery: null
  required: false
  value: {}
name: XSOAR Engineer Training - Training 1 - Scenario 2 - Sub-Playbook
outputs:
- contextPath: LoopData
  description: The parsed data with decoded base64.
  type: unknown
sourceplaybookid: XSOAR Engineer Training - For Each Loops (Sub-Playbook)
starttaskid: "0"
tags:
- training
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2979cc22-1622-43eb-8760-eb6a6e990eb3
      iscommand: false
      name: ""
      version: -1
    taskid: 2979cc22-1622-43eb-8760-eb6a6e990eb3
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 60,
          "y": -120
        }
      }
  "3":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Base64
                root: inputs.data
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Base64
                root: inputs.data
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: 'Here we check if the data we are looping over has the key of Base64
        that we want to decode. '
      id: 1691f9a3-29b2-4bdd-8c33-672a1c8660ce
      iscommand: false
      name: Is there a Base64 Key to decode?
      type: condition
      version: -1
    taskid: 1691f9a3-29b2-4bdd-8c33-672a1c8660ce
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 50,
          "y": 225
        }
      }
  "6":
    continueonerrortype: ""
    id: "6"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: e1f7f07f-012c-4f8f-801b-8fbd92cd2dff
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: e1f7f07f-012c-4f8f-801b-8fbd92cd2dff
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 50,
          "y": 925
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "10"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: LoopData
      stringify:
        simple: "false"
      value:
        complex:
          root: inputs.data
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Set a value in context under the key you entered.

        We set a  new key with our input data
      id: 44327619-61a4-4db6-87de-e65e0ff88b97
      iscommand: false
      name: Set Loop Data Key
      script: Set
      type: regular
      version: -1
    taskid: 44327619-61a4-4db6-87de-e65e0ff88b97
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 400
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    quietmode: 0
    scriptarguments:
      value:
        complex:
          accessor: Base64
          root: LoopData
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: "Decodes an input in Base64 format.\n\nDecode the Base64 key from
        that. "
      id: 54b94d59-2a20-4a71-8571-cb8341ca72b3
      iscommand: false
      name: Decode Base 64 Key
      script: Base64Decode
      type: regular
      version: -1
    taskid: 54b94d59-2a20-4a71-8571-cb8341ca72b3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 575
        }
      }
  "11":
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "6"
    note: false
    quietmode: 0
    scriptarguments:
      keys:
        simple: DecodedBase64
      parent:
        simple: LoopData
      values:
        complex:
          accessor: decoded
          root: Base64
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: "Set multiple keys/values to the context.\n\nAnd then add the decoded
        value back into LoopData, so now we have the original and decoded values. "
      id: b77a3d31-5111-4829-89f3-45b50f025ab5
      iscommand: false
      name: Update LoopData with decoded value
      script: SetMultipleValues
      type: regular
      version: -1
    taskid: b77a3d31-5111-4829-89f3-45b50f025ab5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 750
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    scriptarguments:
      all:
        simple: "yes"
      subplaybook:
        simple: "yes"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Delete field from context.

        This automation runs using the default Limited User role, unless you explicitly change the permissions.
        For more information, see the section about permissions here:
        https://docs.paloaltonetworks.com/cortex/cortex-xsoar/6-2/cortex-xsoar-admin/playbooks/automations.html
      id: 5f4d48d8-b26a-49b2-80b1-6835c329ec9e
      iscommand: false
      name: DeleteContext
      script: DeleteContext
      type: regular
      version: -1
    taskid: 5f4d48d8-b26a-49b2-80b1-6835c329ec9e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 40,
          "y": 20
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "3_6_#default#": 0.23
    },
    "paper": {
      "dimensions": {
        "height": 1110,
        "width": 502.5,
        "x": 40,
        "y": -120
      }
    }
  }
